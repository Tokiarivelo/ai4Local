# Configuration par défaut du chart Helm AI4Local

# Configuration globale
global:
  imageRegistry: ''
  imagePullSecrets: []
  storageClass: ''

# Configuration des répliques
replicaCount:
  apiGateway: 2
  aiContentService: 1
  mlService: 1
  web: 2

# Configuration des images
image:
  registry: gcr.io
  repository: ai4local
  tag: 'latest'
  pullPolicy: IfNotPresent

# Configuration des services
service:
  type: ClusterIP
  apiGateway:
    port: 4000
    targetPort: 4000
  aiContentService:
    port: 8080
    targetPort: 8080
  mlService:
    port: 5000
    targetPort: 5000
  web:
    port: 3000
    targetPort: 3000

# Configuration de l'ingress
ingress:
  enabled: true
  className: 'nginx'
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  hosts:
    - host: api.ai4local.mg
      paths:
        - path: /(.*)
          pathType: Prefix
          backend:
            service:
              name: ai4local-api-gateway
              port:
                number: 4000
    - host: ai4local.mg
      paths:
        - path: /(.*)
          pathType: Prefix
          backend:
            service:
              name: ai4local-web
              port:
                number: 3000
  tls:
    - secretName: ai4local-tls
      hosts:
        - api.ai4local.mg
        - ai4local.mg

# Configuration des ressources
resources:
  apiGateway:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  aiContentService:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  mlService:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 1Gi
  web:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Configuration de l'autoscaling
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Configuration des volumes persistants
persistence:
  enabled: true
  storageClass: 'standard-rwo'
  accessMode: ReadWriteOnce
  size: 10Gi

# Configuration MongoDB
mongodb:
  enabled: true
  auth:
    enabled: true
    rootPassword: 'ai4local2025'
    username: 'ai4local'
    password: 'ai4local2025'
    database: 'ai4local'
  architecture: standalone
  persistence:
    enabled: true
    size: 20Gi

# Configuration PostgreSQL
postgresql:
  enabled: true
  auth:
    postgresPassword: 'ai4local2025'
    username: 'ai4local'
    password: 'ai4local2025'
    database: 'ai4local_relational'
  architecture: standalone
  primary:
    persistence:
      enabled: true
      size: 10Gi

# Configuration Redis
redis:
  enabled: true
  auth:
    enabled: true
    password: 'ai4local2025'
  architecture: standalone
  master:
    persistence:
      enabled: true
      size: 5Gi

# Configuration des variables d'environnement
env:
  apiGateway:
    NODE_ENV: production
    JWT_SECRET: 'ai4local-jwt-secret-prod'
    MONGODB_URI: 'mongodb://ai4local:ai4local2025@ai4local-mongodb:27017/ai4local'
    POSTGRES_URI: 'postgresql://ai4local:ai4local2025@ai4local-postgresql:5432/ai4local_relational'
    REDIS_URI: 'redis://:ai4local2025@ai4local-redis-master:6379'
  aiContentService:
    RUST_LOG: 'info'
    MONGODB_URI: 'mongodb://ai4local:ai4local2025@ai4local-mongodb:27017/ai4local'
    REDIS_URI: 'redis://:ai4local2025@ai4local-redis-master:6379'
  mlService:
    ENV: 'production'
    MONGODB_URI: 'mongodb://ai4local:ai4local2025@ai4local-mongodb:27017/ai4local'
    REDIS_URI: 'redis://:ai4local2025@ai4local-redis-master:6379'
  web:
    NODE_ENV: 'production'
    NEXT_PUBLIC_GRAPHQL_URL: 'https://api.ai4local.mg/graphql'

# Configuration des health checks
healthcheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5

# Configuration des annotations de pods
podAnnotations: {}

# Configuration de sécurité
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000

# Configuration des node selectors
nodeSelector: {}

# Configuration des tolerations
tolerations: []

# Configuration des affinités
affinity: {}

# Configuration du monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: monitoring
    labels:
      app: ai4local

# Configuration des backups
backup:
  enabled: true
  schedule: '0 2 * * *' # Tous les jours à 2h du matin
  retention: '30d'
